{
    "docs": [
        {
            "location": "/",
            "text": "Virtual environment manager for Weka, inspired by the extremely useful virtual \nenvironments that Python supports.\n\n\nweka-virtualenv\n can be used for launching the GUI or arbitrary Weka classes.\n\n\nSince \nweka-virtualenv\n uses options starting with double-dashes (\n--\n), clashes with \nWeka options are avoided. Any option that wasn't consumed by \nweka-virtualenv\n \nwill get further processed by the command. E.g., when launching the Explorer\nusing the \nexplorer\n command, a dataset can be supplied to load immediately, \nor, when executing a classifier using the \nrun\n command, any additional option \nwill get passed to the Weka class.\n\n\nYou can use the tool either through the command-line or through its user \ninterface.\n\n\nNote\n\nYou still need to install Weka yourself, \nweka-virtualenv\n only helps you\nseparating your various Weka installations. It is mainly aimed at separating\npackages.\n\n\nHow it works\n\n\nThe tool simply uses existing Weka functionality, namely the \nWEKA_HOME\n\nenvironment variable, for separating the various environments. \nWhen launching a class or GUI tool, it launches a new Java process with the\n\nWEKA_HOME\n environment variable pointing to the current environment's\n\nwekafiles\n directory. \n\n\nIf an environment has no Java or heap size configure (\n<default>\n), then it \njust uses the system's default settings for launching the new process.\n\n\nUser interface\n\n\nYou can start the GUI with the following script from the \nbin\n directory:\n\n\n\n\nLinux/Mac: \nwenvgui.sh\n\n\nWindows: \nwenvgui.bat\n\n\n\n\n\n\nArff Command Selector\n\n\nThis little tool lets you choose environment and application (Explorer or Arff \nViewer) to launch, using the provided dataset filenames (e.g., \nOpen with\n from \nthe right-click mouse context menu):\n\n\n\n\nLinux/Mac: \nwenvarff.sh\n\n\nWindows: \nwenvarff.bat\n\n\n\n\n\n\nVideo\n\n\nYou can find videos for the tool in the following YouTube playlist:\n\n\nweka-virtualenv playlist\n\n\nWindows users\n just have to substitute the \nwenv.sh\n and \nwenvgui.sh\n scripts\nwith \nwenv.bat\n and \nwenvgui.bat\n. For adding the tool's \nbin\n directory to\nyour \nPATH\n environment variable (to make it available from the command prompt),\nfollow \nthese instructions\n.",
            "title": "Home"
        },
        {
            "location": "/#how-it-works",
            "text": "The tool simply uses existing Weka functionality, namely the  WEKA_HOME \nenvironment variable, for separating the various environments. \nWhen launching a class or GUI tool, it launches a new Java process with the WEKA_HOME  environment variable pointing to the current environment's wekafiles  directory.   If an environment has no Java or heap size configure ( <default> ), then it \njust uses the system's default settings for launching the new process.",
            "title": "How it works"
        },
        {
            "location": "/#user-interface",
            "text": "You can start the GUI with the following script from the  bin  directory:   Linux/Mac:  wenvgui.sh  Windows:  wenvgui.bat",
            "title": "User interface"
        },
        {
            "location": "/#arff-command-selector",
            "text": "This little tool lets you choose environment and application (Explorer or Arff \nViewer) to launch, using the provided dataset filenames (e.g.,  Open with  from \nthe right-click mouse context menu):   Linux/Mac:  wenvarff.sh  Windows:  wenvarff.bat",
            "title": "Arff Command Selector"
        },
        {
            "location": "/#video",
            "text": "You can find videos for the tool in the following YouTube playlist:  weka-virtualenv playlist  Windows users  just have to substitute the  wenv.sh  and  wenvgui.sh  scripts\nwith  wenv.bat  and  wenvgui.bat . For adding the tool's  bin  directory to\nyour  PATH  environment variable (to make it available from the command prompt),\nfollow  these instructions .",
            "title": "Video"
        },
        {
            "location": "/commands/",
            "text": "Available commands:\n\nalias-add <options> <args>\n    Adds an alias definition, i.e., shortcut for command and options.\n    All options not consumed by this command will get used as options for the alias.\n    No checks are being performed on the correctness.\n\nalias-del <options>\n    Removes an alias definition.\n\nalias-exec <options> <args>\n    Executes an alias definition, i.e., shortcut for command and options.\n    All options not consumed by this command will get used as additional options for the alias.\n    No checks are being performed on the correctness.\n\nalias-list <options>\n    Lists aliases and their associated options.\n    Listing can be for global aliases, per environment, or for all.\n\narffviewer <env> <args>\n    Launches the Weka Arff viewer.\n    You can supply dataset filenames to load immediately in the viewer.\n\nclone <options>\n    Clones an existing environment.\n    Allows adjusting of environment parameters.\n\ncreate <options>\n    Creates a new environment.\n    Can be initialized with the content of an existing 'wekafiles' directory.\n\ndelete <options>\n    Deletes an existing environment.\n\nexperimenter <env> <args>\n    Launches the Weka Experimenter.\n\nexplorer <env> <args>\n    Launches the Weka Explorer.\n    You can supply a dataset filename to load immediately in the Explorer.\n\nguichooser <env>\n    Launches the Weka GUIChooser.\n\nhelp\n    Outputs help information.\n\nknowledgeflow <env> <args>\n    Launches the Weka KnowledgeFlow.\n    You can supply a flow file to load immediately.\n\nlist_cmds\n    Lists all available commands.\n\nlist_envs <options>\n    Lists all available environments.\n\npkgmgr <env> <args>\n    Executes the commandline package manager.\n    You can supply additional options to the package manager, like '-list-packages'.\n\npkgmgr-gui <env>\n    Launches the package manager user interface.\n\nreset <options>\n    Deletes an existing environment, i.e., deletes the \"wekafiles\" sub-directory.\n\nrun <env> <options> <args>\n    Executes an arbitrary class with the unconsumed command-line options.\n\nsqlviewer <env>\n    Launches the Weka SQL Viewer.\n\nstatus\n    Outputs some status information.\n\nupdate <env> <options>\n    Allows adjusting of parameters of an existing environment.\n\nworkbench <env>\n    Launches the Weka Workbench.\n\n\nNotes:\n<env>\n    the name of the environment to use for the command.\n<options>\n    the command supports additional options,\n    you can use --help as argument to see further details.\n<args>\n    the command passes on all unconsumed options to the \n    underlying process",
            "title": "Commands"
        },
        {
            "location": "/examples/",
            "text": "Note for Windows users:\n Use \nwenv.bat\n instead of \nwenv.sh\n from the \nbin\n \ndirectory for the following examples. Also, remove the trailing backslashes\nin the commands and place the whole command on a single line.\n\n\nEnvironments\n\n\nCreate an environment for Weka 3.8.1:\n\n\nwenv.sh create \\\n  --name weka381 \\\n  --weka /home/fracpete/programs/weka/weka-3-8-1/weka.jar\n\n\n\n\nCreate an environment for Weka 3.9.1 with a custom java binary to use\nand 4GB of heap size:\n\n\nwenv.sh create \\\n  --name weka391 \\\n  --weka /home/fracpete/programs/weka/weka-3-9-1/weka.jar \\\n  --java /home/fracpete/programs/jdk/jdk1.8.0_144-64bit/bin/java \\\n  --memory 4g\n\n\n\n\nLaunching user interfaces\n\n\nLaunch the GUIChooser from the \nweka381\n environment:\n\n\nwenv.sh guichooser weka381\n\n\n\n\nLaunch the Explorer from the \nweka391\n environment:\n\n\nwenv.sh explorer weka391\n\n\n\n\nExecuting classes\n\n\nCross-validate J48 from the \nweka381\n environment on the \niris\n dataset:\n\n\nwenv.sh run weka381 --class weka.classifiers.trees.J48 \\\n  -t /home/fracpete/development/datasets/uci/nominal/iris.arff\n\n\n\n\nAliases (global)\n\n\nCreate a global alias called \nj48\n:\n\n\nwenv.sh alias-add --name j48 run --class weka.classifiers.trees.J48 -C 0.3\n\n\n\n\nIf the command of a global alias requires an environment for executing, then\nthe environment needs to get injected via the \n--inject-env\n option. \nThe following command executes the global alias \nj48\n, cross-validating the \n\nJ48\n classifier on the UCI dataset \niris\n:\n\n\nwenv.sh alias-exec --inject-env weka381 --name j48 -t iris.arff\n\n\n\n\nAliases (environment-specific)\n\n\nCreate an alias called \nj48\n in the \nweka381\n environment:\n\n\nwenv.sh alias-add --env weka381 --name j48 run --class weka.classifiers.trees.J48 -C 0.3\n\n\n\n\nThe following command executes the alias \nj48\n from the \nweka381\n environment, \ncross-validating the \nJ48\n classifier on the UCI dataset \niris\n:\n\n\nwenv.sh alias-exec --env weka381 --name j48 -t iris.arff\n\n\n\n\nAliases (list)\n\n\nYou can list all aliases, global and for all environments, as follows:\n\n\nwenv.sh alias-list --all\n\n\n\n\nWhich will output something like this:\n\n\nEnvironment | Name | Command                                      \n------------+------+----------------------------------------------\n<global>    | j48  | run --class weka.classifiers.trees.J48 -C 0.3\nweka381     | j48  | run -class weka.classifiers.trees.J48 -C 0.3 \n\n\n\n\nYou can list all global aliases as follows:\n\n\nwenv.sh alias-list\n\n\n\n\nYou can list the aliases for environment \nweka381\n as follows:\n\n\nwenv.sh alias-list --env weka381\n\n\n\n\nEnvironment locations\n\n\nThe environments get created in the following directory:\n\n\n\n\n\n\nUnix (Linux, Mac)\n\n\n$HOME/.local/share/wekavirtualenv\n\n\n\n\n\n\nWindows\n\n\n%USERPROFILE%\\wekavirtualenv",
            "title": "Examples"
        },
        {
            "location": "/examples/#environments",
            "text": "Create an environment for Weka 3.8.1:  wenv.sh create \\\n  --name weka381 \\\n  --weka /home/fracpete/programs/weka/weka-3-8-1/weka.jar  Create an environment for Weka 3.9.1 with a custom java binary to use\nand 4GB of heap size:  wenv.sh create \\\n  --name weka391 \\\n  --weka /home/fracpete/programs/weka/weka-3-9-1/weka.jar \\\n  --java /home/fracpete/programs/jdk/jdk1.8.0_144-64bit/bin/java \\\n  --memory 4g",
            "title": "Environments"
        },
        {
            "location": "/examples/#launching-user-interfaces",
            "text": "Launch the GUIChooser from the  weka381  environment:  wenv.sh guichooser weka381  Launch the Explorer from the  weka391  environment:  wenv.sh explorer weka391",
            "title": "Launching user interfaces"
        },
        {
            "location": "/examples/#executing-classes",
            "text": "Cross-validate J48 from the  weka381  environment on the  iris  dataset:  wenv.sh run weka381 --class weka.classifiers.trees.J48 \\\n  -t /home/fracpete/development/datasets/uci/nominal/iris.arff",
            "title": "Executing classes"
        },
        {
            "location": "/examples/#aliases-global",
            "text": "Create a global alias called  j48 :  wenv.sh alias-add --name j48 run --class weka.classifiers.trees.J48 -C 0.3  If the command of a global alias requires an environment for executing, then\nthe environment needs to get injected via the  --inject-env  option. \nThe following command executes the global alias  j48 , cross-validating the  J48  classifier on the UCI dataset  iris :  wenv.sh alias-exec --inject-env weka381 --name j48 -t iris.arff",
            "title": "Aliases (global)"
        },
        {
            "location": "/examples/#aliases-environment-specific",
            "text": "Create an alias called  j48  in the  weka381  environment:  wenv.sh alias-add --env weka381 --name j48 run --class weka.classifiers.trees.J48 -C 0.3  The following command executes the alias  j48  from the  weka381  environment, \ncross-validating the  J48  classifier on the UCI dataset  iris :  wenv.sh alias-exec --env weka381 --name j48 -t iris.arff",
            "title": "Aliases (environment-specific)"
        },
        {
            "location": "/examples/#aliases-list",
            "text": "You can list all aliases, global and for all environments, as follows:  wenv.sh alias-list --all  Which will output something like this:  Environment | Name | Command                                      \n------------+------+----------------------------------------------\n<global>    | j48  | run --class weka.classifiers.trees.J48 -C 0.3\nweka381     | j48  | run -class weka.classifiers.trees.J48 -C 0.3   You can list all global aliases as follows:  wenv.sh alias-list  You can list the aliases for environment  weka381  as follows:  wenv.sh alias-list --env weka381",
            "title": "Aliases (list)"
        },
        {
            "location": "/examples/#environment-locations",
            "text": "The environments get created in the following directory:    Unix (Linux, Mac)  $HOME/.local/share/wekavirtualenv    Windows  %USERPROFILE%\\wekavirtualenv",
            "title": "Environment locations"
        },
        {
            "location": "/maven/",
            "text": "Add the following dependency to you \npom.xml\n:\n\n\n  <dependency>\n    <groupId>com.github.fracpete</groupId>\n    <artifactId>weka-virtualenv</artifactId>\n    <version>0.0.14</version>\n  </dependency>",
            "title": "Maven"
        },
        {
            "location": "/releases/",
            "text": "The following releases are available:\n\n\n\n\n0.0.14\n\n\n0.0.13\n\n\n0.0.12\n\n\n0.0.11\n\n\n0.0.10\n\n\n0.0.9\n\n\n0.0.8\n\n\n0.0.7\n\n\n0.0.4\n\n\n0.0.3\n\n\n0.0.2",
            "title": "Releases"
        }
    ]
}